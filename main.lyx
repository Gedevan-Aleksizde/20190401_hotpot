#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass bxjsarticle
\begin_preamble
\usepackage{zxjatype}
\usepackage{float}
\usepackage{dcolumn}
\usepackage{enumerate}
\usepackage{url}
\usepackage{multicol}
\usepackage{boites}
\usepackage{booktabs}
\usepackage{listings}
\usepackage{color}
%
\definecolor{mygreen}{rgb}{0,0.6,0}
\definecolor{myblue}{rgb}{0,0,0.6}
\definecolor{mygray}{rgb}{0.5,0.5,0.5}
\definecolor{mygray2}{rgb}{0.2,0.2,0.2}
\definecolor{mymauve}{rgb}{0.58,0,0.82}
%
\setmainfont[Ligatures=TeX]{Palatino Linotype} %欧文フォント族指定
\setsansfont[Ligatures=TeX]{TeX Gyre Heros} %欧文サンセリフフォント指定
\setmonofont{TeX Gyre Cursor} %欧文等幅フォント指定
% \textranwen{ foo! foo! } 任意の文を欧文として処理 できる
\setjamainfont[BoldFont=TakaoPGothic]{Takao P明朝} %和文フォント指定
\setjasansfont[BoldFont=TakaoPGothic]{Takao Pゴシック} %和文サンセリフ指定
\setjamonofont[BoldFont=Migu 1M]{Migu 1M} %和文等幅フォント
\PassOptionsToPackage{normalem}{ulem}
\makeatletter
\newcommand{\argmax}{\mathop{\rm arg~max}\limits} %argumented maximize
\newcommand{\argmin}{\mathop{\rm arg~min}\limits} %arg.minimize
\newcommand{\indep}{\mathop{\perp\!\!\!\perp}}% independent
\newcommand{\plim}{\mathop{\rm plim}} % plim
\newcommand{\bi}{\boldsymbol}%bold italic
\providecommand{\definitionname}{DEFINITION}
\providecommand{\lemmaname}{LEMMA}
\providecommand{\theoremname}{THEOREM}
\providecommand{\propositionname}{PROPOSITION}
\newcolumntype{.}{D{.}{.}{-1}}  %{tabular}{r....}  aligned by dot.
\lstset{ %algorithm form
language=R,%
escapechar=ø,%
numbers=left,%
numberstyle=\scriptsize,%
stepnumber=1,%
columns=[l]{fullflexible},%
basicstyle=\ttfamily,%
numbers=left,%
breaklines=true,%
numberstyle=\scriptsize,%
stepnumber=1,%
columns=[l]{fullflexible},%
basicstyle=\ttfamily,%
identifierstyle={\small},%
commentstyle={\small\itshape},%
keywordstyle={\small\bfseries},%
ndkeywordstyle={\small},%
stringstyle={\small\ttfamily},%
%% set left number frame
frame=single,%
backgroundcolor=\color[rgb]{0.9,0.9,0.9},%
%fillcolor=\color{mygray},%
rulecolor=\color{myblue},%
framesep=2ex,%
framexleftmargin=2.5mm,%
%% set color style
numberstyle=\tiny\color{mygray2},%
commentstyle=\color{mygreen},%
keywordstyle=\color{blue},%
stringstyle=\color{mymauve},%
rulecolor=\color{black},%
showspaces=true,% 連続ブランクをそのまま表示する
showstringspaces=true % ブランクの存在を記号で表す
}

\usepackage[xetex] {hyperref}
\hypersetup{
unicode=true,%
bookmarks=true,%
bookmarksnumbered=true,%bookmark available
bookmarksopen=true,bookmarksopenlevel=1,%
breaklinks=false,%
pdfborder={0 0 0},%
backref=false,colorlinks=false,%
pdftitle={},%
pdfauthor={},%
pdfsubject={},%
pdfcreator={},%
pdfproducer={}
}
\end_preamble
\use_default_options true
\begin_modules
theorems-bytype
theorems-sec-bytype
\end_modules
\maintain_unincluded_children false
\begin_local_layout
InsetLayout BreakBox
LabelFont
Color               	foreground
EndFont
Align 		Block
Decoration		 Classic
LyxType		custom
LatexName		breakbox
LatexType		environment
LabelString		breakbox
MultiPar              	true
Requirement	boites
End
Style Enume_alph
Category             List
Margin                Static
LatexType             Item_Environment
LatexName             enumerate
LatexParam      [(a)]
NextNoIndent          1
LeftMargin            MMN
LabelSep              xx
ItemSep               0.2
TopSep                0.7
BottomSep             0.7
ParSep                0.3
Align                 Block
AlignPossible         Block, Left
LabelType             enumerate
LabelString           "aaaaaaaa"
HTMLTag               ul
HTMLItem              li
HTMLLabel             NONE
End
\end_local_layout
\language japanese
\language_package none
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format pdf4
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style plainnat
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
[四月馬鹿][機械学習] 非線形分類アルゴリズム「HotPot」を新開発しました!
\end_layout

\begin_layout Section*
概要
\end_layout

\begin_layout Itemize
エイプリルフール企画
\end_layout

\begin_layout Section*
謝辞
\end_layout

\begin_layout Standard
本アルゴリズムの考案にあたって, 以下のような記事・言及が着想の鍵となった.
 この場を借りてお礼を申し上げる.
\end_layout

\begin_layout Standard
https://twitter.com/sammy_suyama/status/999429919607209985
\end_layout

\begin_layout Standard
https://www.datasciencecentral.com/profiles/blogs/why-logistic-regression-should-b
e-the-last-thing-you-learn-when-b
\end_layout

\begin_layout Section
はじめに
\end_layout

\begin_layout Standard
以前 http://ill-identified.hatenablog.com/entry/2018/05/23/233955 において, ロジスティック回帰や
 SVM といった広く利用される分類アルゴリズムは, いずれも線形な境界面によって分類する性質があることを述べた.
 一般に, 非線形な分類が可能になるアルゴリズムのほうが, 線形分類よりも複雑な構造に対して性能のよい分類モデルを作成できるが, 一方でアルゴリズムが複雑になっ
たり, 計算量が非常に多く実用的でないことも多い.
 そこで私は, 線形分類器より自由度の高い分類アルゴリズム「HotPot」を考案し実装した.
 現時点では Python での実装のみだが, 他の言語での実装も容易なはずである.
 HotPot 自体の動作には最新の scikit-learn((https://scikit-learn.org/stable/)) が必要であるが,
 scikit-learn は Python での機械学習においてグローバルスタンダードと言って良く, この制約が問題となる場面は極めて限られるはずだ.
\end_layout

\begin_layout Standard
この記事の残りの部分では, 全てのソースコードの公開と, アルゴリズムの実演を行う.
 冒頭に挙げた記事のように、このアルゴリズムではロジスティック回帰などではできなかった曲面による分類境界を実現している.
\end_layout

\begin_layout Section
実験
\end_layout

\begin_layout Standard
実験をおこなった jupyter notebook 全文は以下の github リポジトリにある.
 ここでは, 結果の要約だけを掲載する.
\end_layout

\begin_layout Standard
https://github.com/Gedevan-Aleksizde/20190401_hotpot
\end_layout

\begin_layout Standard
HotPot アルゴリズムの性能を比較するため, 代表的な線形分類アルゴリズムであるロジスティック回帰と, 非線形分類アルゴリズムの代表例のなかでもシンプルなガ
ウシアン・ナイーヴベイズ (GNB) 分類器を比較対象とした.
 実験に利用したデータと, 理論上の分類境界をプロットしたのが図1である.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename data.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
データと分類境界のプロット
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
図2はそれぞれの分類器の描く分類境界である.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename plot.png
	lyxscale 50
	width 70text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
各アルゴリズムによる分類境界
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
図を一見しても, 他の2つの比較対象と比べ, HotPot アルゴリズムの描く決定境界の HotPot類似指数 (HSI; HotPot Similarity
 Index) が極めて高く, 見ていると火鍋が食べたくなることがわかる (図3).
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Hotpod01.jpg

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
実際の火鍋の例
\begin_inset CommandInset href
LatexCommand href
name "SojinProject"
target "https://commons.wikimedia.org/wiki/File:Hotpod01.jpg"
literal "false"

\end_inset

, CC-BY-SA-4.0
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
また, 表1から分かるように, 対数損失 (log loss) および AUC についても優れたパフォーマンスを示している.
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Logistic
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GNB
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
HotPot
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Log Loss
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.1675
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.2245
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.0527
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
AUC
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.9933
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.9702
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.9984
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
各アルゴリズムの精度評価
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
実装
\end_layout

\begin_layout Standard
では, 最後に hotpot がどのように実装されているかを公開する.
 これは極めて単純である.
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

from sklearn.svm import SVC from sklearn.preprocessing
\end_layout

\begin_layout Plain Layout

import StandardScaler from sklearn.pipeline
\end_layout

\begin_layout Plain Layout

import Pipeline
\end_layout

\begin_layout Plain Layout

hotpot = Pipeline([('standardize', StandardScaler()),
\end_layout

\begin_layout Plain Layout

                   ('HotPot', SVC(probability=True, kernel='rbf', degree=1))])
\end_layout

\begin_layout Plain Layout

hotpot.fit(X, y)
\end_layout

\end_inset


\end_layout

\begin_layout Section
結論
\end_layout

\begin_layout Standard
本記事では, ロジスティック回帰など, 従来広く使われている分類アルゴリズムの欠点を指摘した上で, この欠点が, 線形な境界線しか形成できない,
 線形分類アルゴリズムというクラスに属するものであるという事実に由来するものだと示した.
 その上で, 容易に実装可能な非線形分類アルゴリズムを提案し, 実装と良好な実験結果を掲載することができた.
 また, HotPot アルゴリズムの持つ高い HotPot 類似性能は, 見るものに火鍋を食べたいと思わせる力があることがわかった.
\end_layout

\end_body
\end_document
